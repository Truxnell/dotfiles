{{ if (or (eq .chezmoi.osRelease.id "arch") (eq .chezmoi.osRelease.idLike "arch") ) -}}
#!/bin/bash

set -eufo pipefail

echo -e "\033[0;32m>>>>> Begin Setting Up Arch Linux Packages <<<<<\033[0m"

# Cli utils
packages=(
  fish
  curl
  git
  fd
  bat
  ripgrep
  thefuck
  fzf
  starship
  zoxide
  age
  lsd
  unzip
  paru
  bitwarden-cli
  duf
  fd
  fish
  htop
  helm
  kubectl
  kubie
  htop
  nano
  nfs-utils
  nmap
  sops
  syncthing
  wget
  curl
  tree
  ack
)

# AUR Cli apps

aur_packages=(
  topgrade
  flux-bin
  talosctl
  velero-bin
)

# Desktop utils
packages+=(
  dbeaver
  gimp
  vivaldi
)

# AUR Desktop apps

aur_packages+=(
  discord
  joplin-desktop-bin
  spotify
  visual-studio-code-bin
)


echo "updating packages"
{{   if ne .chezmoi.username "root" -}}
sudo pacman -Syu --noconfirm
{{   else -}}
pacman -Syu --noconfirm
{{   end -}}

for package in ${packages[@]}; do
  if [ "$(pacman -Qq $package 2> /dev/null)" != $package ]; then
    echo "installing $package"
{{-   if ne .chezmoi.username "root" }}
    sudo pacman -S --noconfirm $package
{{-   else }}
    pacman -S --noconfirm $package
{{-   end }}
  fi
done


for aur_package in ${aur_packages[@]}; do
  if [ $(pacman -Qq $aur_package 2> /dev/null) != $aur_package ]; then
    echo "installing $aur_package from AUR"
    paru -S --noconfirm $aur_package
  fi
done

echo -e "\033[0;32m>>>>> Finish Setting Up Arch Linux Packages <<<<<\033[0m"
{{ end -}}
